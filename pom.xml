<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-plugins</artifactId>
    <version>39</version>
    <relativePath />
  </parent>

    <groupId>StrakkraftBenchProjekt</groupId>
    <artifactId>StrakkraftBenchProjekt</artifactId> 
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging> 
    <name>StrakkraftBenchProjekt</name> 
    <url>http://maven.apache.org</url>     

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <mavenVersion>3.2.5</mavenVersion>
        <mavenPluginPluginVersion>3.5</mavenPluginPluginVersion>  
        <java.version>1.8</java.version> 
        <api.version>3.4.0</api.version>     
    </properties>

   
    <dependencies>

     <dependency>
      <groupId>org.apache.maven.plugin-tools</groupId>
      <artifactId>maven-plugin-annotations</artifactId>
      <scope>provided</scope>
    </dependency>
    <!-- Maven -->
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <version>${mavenVersion}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <version>${mavenVersion}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <version>${mavenVersion}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-shared-utils</artifactId>
      <version>3.4.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-shared-incremental</artifactId>
      <version>1.1</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-plugin-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.maven.shared</groupId>
          <artifactId>maven-shared-utils</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
             
        <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <version>3.8.1</version>
          <scope>test</scope>       
        </dependency>  

        <dependency>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>2.39.0</version>
        </dependency> 
        <dependency>
          <groupId>org.apache.maven.enforcer</groupId>
          <artifactId>enforcer-api</artifactId>
          <version>${api.version}</version>
          <scope>provided</scope>
        </dependency> 
         <dependency>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>extra-enforcer-rules</artifactId>
            <version>1.7.0</version>
          </dependency>     

    </dependencies>    

     <build>
        <plugins>    
            <plugin> <!-- this is the maven plugin, it is necesary to compile the xml file -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>     
                </configuration>
            </plugin>  

         <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>1.0.0.BETA1</version>
          <configuration>
           <java>
             <eclipse>
                  <file>${basedir}/eclipse-fmt.xml</file>
                  <version>4.7.1</version>
             </eclipse>
           </java>
         </configuration>
       </plugin> 

        <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <dependencies>

                 
        </dependencies>
        <executions>
          <execution>
            <id>display-info</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <phase>validate</phase>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>[3.8.1,)</version>
                  <message>3.8.1 required to no longer download dependencies via HTTP (use HTTPS instead).</message>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>[${maven.compiler.release},)</version>
                </requireJavaVersion>
                <!-- TODO failing during incrementals deploy: MENFORCER-281
                <requirePluginVersions>
                  <banSnapshots>false</banSnapshots>
                </requirePluginVersions>
                -->
                <enforceBytecodeVersion>
                  <maxJdkVersion>${maven.compiler.release}</maxJdkVersion>
                  <ignoredScopes>
                    <ignoredScope>test</ignoredScope>
                  </ignoredScopes>
                  <!-- To add exclusions in a Jenkins plugin, use:
                 <plugin>
                      <groupId>org.apache.maven.plugins</groupId>
                      <artifactId>maven-enforcer-plugin</artifactId>
                      <executions>
                          <execution>
                              <id>enforce-banned-dependencies</id>
                              <goals>
                                  <goal>enforce</goal>
                              </goals>

                         <configuration>
                              <rules>
                                 <enforceBytecodeVersion>
                                    <maxJdkVersion>1.5</maxJdkVersion>
                                       <excludes>
                                          <exclude>org.mindrot:jbcrypt</exclude>
                                       </excludes>
                                 </enforceBytecodeVersion>
                              </rules>
                              <fail>true</fail>
                         </configuration>
                         
                      </execution>
                   </executions>
               </plugin>
                  -->
                </enforceBytecodeVersion>
                <bannedDependencies>
                  <excludes>
                    <exclude>javax.servlet:javax.servlet-api</exclude>
                    <exclude>javax.servlet:servlet-api</exclude>
                    <exclude>org.sonatype.sisu:sisu-guice</exclude>
                    <exclude>log4j:log4j:*:jar:compile</exclude>
                    <exclude>log4j:log4j:*:jar:runtime</exclude>
                    <exclude>commons-logging:commons-logging:*:jar:compile</exclude>
                    <exclude>commons-logging:commons-logging:*:jar:runtime</exclude>

                    <!-- CVE-2021-44228 -->
                    <exclude>org.apache.logging.log4j:*:(,2.15.0-rc1]</exclude>

                    <!-- Jenkins Test Harness is based on JUnit. Adding TestNG dependency would disable some of its functionality. -->
                    <exclude>org.testng:testng</exclude>
                  </excludes>
                </bannedDependencies>
                <requireUpperBoundDeps>
                  <excludes>
                    <exclude>com.google.code.findbugs:annotations</exclude>
                    <exclude>com.google.code.findbugs:jsr305</exclude>
                    <exclude>com.google.guava:guava</exclude>
                    <exclude>commons-logging:commons-logging</exclude>
                    <exclude>javax.servlet:javax.servlet-api</exclude>
                    <exclude>javax.servlet:servlet-api</exclude>
                    <exclude>net.java.dev.jna:jna</exclude>
                    <exclude>org.kohsuke:access-modifier-annotation</exclude>
                   
                    <exclude>org.ow2.asm:asm</exclude>
                  </excludes>
                </requireUpperBoundDeps>
              </rules>
            </configuration>
          </execution>
          <execution>
            <id>no-snapshots-in-release</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <phase>validate</phase>
            <configuration>
              <rules>
               
                <requireReleaseDeps>
                  <message>No SNAPSHOT versions are allowed for releases</message>
                  <onlyWhenRelease>true</onlyWhenRelease>
                  <!--  whilst we generally want this this allows for easier testing of the plugin-pom in incrementals -->
                  <failWhenParentIsSnapshot>false</failWhenParentIsSnapshot>
                </requireReleaseDeps>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
                 
      </plugins>
    </build>     

</project>
